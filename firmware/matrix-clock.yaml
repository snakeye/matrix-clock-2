esphome:
  name: matrix_clock
  platform: ESP8266
  board: esp12e
  platformio_options:
    upload_speed: 921600
  includes:
    - ambient_light_sensor.h

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Matrix-Clock Fallback Hotspot"
    password: "dcgcN2Ao6Ilo"

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
# api:

# Enable OTA Firmware upload
ota:

spi:
  clk_pin: GPIO14
  mosi_pin: GPIO13

i2c:
  sda: GPIO4
  scl: GPIO5

ds3231:

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Berlin
    on_time_sync:
      then:
        lambda: |-
          auto time = id(sntp_time).now();
          if(time.is_valid()) {
            id(rtc_time).set_epoch_time(time.timestamp);
          }

  - platform: ds3231
    id: rtc_time
    timezone: Europe/Berlin

sun:
  latitude: 51.2119957
  longitude: 6.6281018

sensor:
  - platform: custom
    lambda: |-
      auto ambient_light_sensor = new AmbientLightSensor();
      App.register_component(ambient_light_sensor);
      return {ambient_light_sensor};
    sensors:
      id: ambient_light
      name: "Ambient Light Sensor"

  - platform: ds3231
    temperature:
      id: ds3231_temp
      name: "DS3231 Temperature"
      accuracy_decimals: 2

display:
  - platform: max7219digit
    cs_pin: GPIO16
    num_chips: 4
    lambda: |-
      auto now = id(rtc_time).now();

      if(now.is_valid()) {
        it.printf(16, -1, id(digit_font), TextAlign::TOP_CENTER, "%d:%02d", now.hour, now.minute);
      }
      else {
        it.print(16, -1, id(digit_font), TextAlign::TOP_CENTER, "--:--");
      }

      it.intensity(id(ambient_light).state);

font:
  - file: "pixelmix.ttf"
    id: digit_font
    size: 8

status_led:
  pin:
    number: GPIO2
    inverted: True
